services:
  n8n-postgres:
    image: postgres:16
    container_name: n8n-postgres
    restart: always
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_NON_ROOT_USER
      - POSTGRES_NON_ROOT_PASSWORD
      - POSTGRES_DB
    volumes:
      - db-storage:/var/lib/postgresql/data
      - ./init-data.sh:/docker-entrypoint-initdb.d/init-data.sh
    networks:
      n8n-network:
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 10

  n8n-core:
    image: docker.n8n.io/n8nio/n8n
    container_name: n8n-core
    restart: always
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=n8n-postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_USER=${POSTGRES_NON_ROOT_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_NON_ROOT_PASSWORD}
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
    expose:
      - 5678
    volumes:
      - n8n-storage:/home/node/.n8n
    networks:
      n8n-network:
      caddy-network:
    depends_on:
      n8n-postgres:
        condition: service_healthy

volumes:
  db-storage:
  n8n-storage:

networks:
  n8n-network:
    name: n8n-network
  caddy-network:
    external: true
